# SPDX-FileCopyrightText: 2025 AJ Walter
# SPDX-License-Identifier: GPL-3.0-or-later OR MIT

version: '3.8'

# For a build:
# podman-compose up --build <service>
# ex:
# podman-compose up --build Miyoo

# If you don't want to build the container:
# podman-compose up --no-build <service>

# For a shell:
# podman-compose run --rm <service> bash
# Then you can run:
# build.sh
# in the current directory to start building the project.

# For a linux flatpak build, install Flatpak on your host
# and run tools/linux/flatpak.sh from the root of this repo

services:
  Example:
    # Example driver and build tooling
    build:
      dockerfile: Example/Containerfile
    image: ghcr.io/redtopper/super-haxagon/example:latest
    container_name: super-haxagon-example
    hostname: super-haxagon-example
    command: build.sh
    working_dir: /root/git/build/example
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/example -DCMAKE_BUILD_TYPE=Debug"
    volumes:
      - ../:/root/git:z
      - ./Example/build.sh:/usr/local/bin/build.sh
  N3DS:
    build:
      dockerfile: N3DS/Containerfile
    image: ghcr.io/redtopper/super-haxagon/n3ds:latest
    container_name: super-haxagon-3ds
    hostname: super-haxagon-3ds
    command: build.sh
    working_dir: /root/git/build/3ds
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/3ds -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./N3DS/build.sh:/usr/local/bin/build.sh
  Nspire:
    build:
      dockerfile: Nspire/Containerfile
    image: ghcr.io/redtopper/super-haxagon/nspire:latest
    container_name: super-haxagon-nspire
    hostname: super-haxagon-nspire
    command: build.sh
    working_dir: /root/git/build/nspire
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/nspire -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./Nspire/build.sh:/usr/local/bin/build.sh
  Switch:
    image: devkitpro/devkita64
    container_name: super-haxagon-switch
    hostname: super-haxagon-switch
    command: build.sh
    working_dir: /root/git/build/switch
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/switch -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./Switch/build.sh:/usr/local/bin/build.sh
  SDL2-Linux:
    build:
      dockerfile: SDL2-Linux/Containerfile
    image: ghcr.io/redtopper/super-haxagon/linux-sdl2:latest
    container_name: super-haxagon-sdl2-linux
    hostname: super-haxagon-sdl2-linux
    command: build.sh
    working_dir: /root/git/build/sdl2-linux
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/sdl2-linux -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./SDL2-Linux/build.sh:/usr/local/bin/build.sh
  SDL2-PortMaster:
    image: monkeyx/retro_builder:arm64
    container_name: super-haxagon-sdl2-portmaster
    hostname: super-haxagon-sdl2-portmaster
    command: build.sh
    working_dir: /root/git/build/sdl2-portmaster
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/sdl2-portmaster -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./SDL2-PortMaster/build.sh:/usr/local/bin/build.sh
  SDL2-Miyoo:
    build:
      context: .
      dockerfile: SDL2-Miyoo/Containerfile
    image: ghcr.io/redtopper/super-haxagon/miyoo:latest
    container_name: super-haxagon-sdl2-miyoo
    hostname: super-haxagon-sdl2-miyoo
    command: build.sh
    working_dir: /root/git/build/sdl2-miyoo
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/sdl2-miyoo -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./SDL2-Miyoo/build.sh:/usr/local/bin/build.sh
  SFML-Linux:
    build:
      dockerfile: SFML-Linux/Containerfile
    image: ghcr.io/redtopper/super-haxagon/linux:latest
    container_name: super-haxagon-sfml-linux
    hostname: super-haxagon-sfml-linux
    command: build.sh
    working_dir: /root/git/build/sfml-linux
    environment:
      - "CMAKE_ARGS=-DCMAKE_INSTALL_PREFIX=/root/git/release/sfml-linux -DCMAKE_BUILD_TYPE=Release"
    volumes:
      - ../:/root/git:z
      - ./SFML-Linux/build.sh:/usr/local/bin/build.sh
